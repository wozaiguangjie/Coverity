AM_CREATES_EMPTY_JAR_FILE_ENTRY = 不良实践 - 创建了一个空的jar方法入口
AM_CREATES_EMPTY_ZIP_FILE_ENTRY = 不良实践 - 创建了一个空的zip文件的入口
AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION = 多线程问题 - 并发抽象的顺序调用可能不是原子的
BAC_BAD_APPLET_CONSTRUCTOR = 错误的用法 - 错误的Applet构造方法依赖未初始化的AppletStub
BC_BAD_CAST_TO_ABSTRACT_COLLECTION = 危险的用法 - 转换成抽象集合值得怀疑
BC_BAD_CAST_TO_CONCRETE_COLLECTION = 危险的用法 - 转换成具体集合可能有问题
BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS = 不良实践 - Equals方法不应该假设任何有关参数类型的事宜
BC_IMPOSSIBLE_CAST = 基本规则 - 不可能的转换
BC_IMPOSSIBLE_DOWNCAST = 基本规则 - 不可能转型
BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY = 基本规则 - 集合转换为数组元素时发生的类型转换错误
BC_IMPOSSIBLE_INSTANCEOF = 基本规则 - instanceof一直返回false
BC_UNCONFIRMED_CAST = 危险的用法 - 未检查/未证实的类型转换
BC_VACUOUS_INSTANCEOF = 基本规则 - instanceof会一直返回true
BIT_ADD_OF_SIGNED_BYTE = 错误的用法 - 在带符号的byte值上进行位add运算
BIT_AND = 基本规则 - 不兼容的位掩码(BIT_AND)
BIT_AND_ZZ = 错误的用法 - 检查 ((...) & 0) == 0 是否成立
BIT_IOR = 错误的用法 - 不兼容的位掩码（BIT_IOR）
BIT_IOR_OF_SIGNED_BYTE = 错误的用法 - 在带符号的byte值上进行位OR运算
BIT_SIGNED_CHECK = 不良实践 - 检测带符号的位运算
BIT_SIGNED_CHECK_HIGH_BIT = 错误的用法 - 检查位运算的符号
BOA_BADLY_OVERRIDDEN_ADAPTER = 错误的用法 - 类覆盖了父类中实现的方法适配器错误
BX_BOXING_IMMEDIATELY_UNBOXED = 性能问题 - 基本类型包装之后立刻解包
BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION = 性能问题 - 基本数据被装箱又被拆箱
BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR = 错误的用法 - 基础类型拆箱后用于三元表达式
BX_UNBOXING_IMMEDIATELY_REBOXED = 性能问题 - 装箱的值被拆箱，然后立刻重新装箱了
CD_CIRCULAR_DEPENDENCY = 错误的用法 - 类间存在循环引用
CI_CONFUSED_INHERITANCE = 危险的用法 - 类是final的，但是定义了protected属性
CN_IDIOM = 不良实践 - 类实现了Cloneable ，但是没有定义或使用clone方法
CN_IDIOM_NO_SUPER_CALL = 不良实践 - clone方法没有调用super.clone()
CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE = 不良实践 - 类定义了clone()但没有实现Cloneable
CO_ABSTRACT_SELF = 不良实践 - 抽象类定义了协变的compareTo()方法
CO_COMPARETO_RESULTS_MIN_VALUE = 错误的用法 - compareTo()或compare()返回Integer.MIN_VALUE
CO_SELF_NO_OBJECT = 不良实践 - 协变的compareTo()定义
DB_DUPLICATE_BRANCHES = 危险的用法 - 在两个分支中使用了相同的代码
DB_DUPLICATE_SWITCH_CLAUSES = 危险的用法 - 在两个switch语句中使用了相同的代码
DC_DOUBLECHECK = 多线程问题 - 可能对属性进行了双重检测
DE_MIGHT_DROP = 不良实践 - 方法可能抛出异常
DE_MIGHT_IGNORE = 不良实践 - 方法可能忽略异常
DLS_DEAD_LOCAL_STORE = 危险的用法 - 未用的局部变量
DLS_DEAD_LOCAL_STORE_IN_RETURN = 危险的用法 - 返回语句中的无用的赋值
DLS_DEAD_LOCAL_STORE_OF_NULL = 危险的用法 - 把null设置给不会用到的局部变量
DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD = 危险的用法 - 无用的局部变量可能与实例属性同名
DLS_DEAD_STORE_OF_CLASS_LITERAL = 错误的用法 - 类中保存了无用字符
DLS_OVERWRITTEN_INCREMENT = 错误的用法 - 重写了自增
DL_SYNCHRONIZATION_ON_BOOLEAN = 多线程问题 - 在Boolean上使用同步可能导致死锁
DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE = 多线程问题 - 同步装箱基本类型可能导致死锁
DL_SYNCHRONIZATION_ON_SHARED_CONSTANT = 多线程问题 - 同步内部String可能导致死锁
DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE = 多线程问题 - 在装箱的基本属性上使用了同步
DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION = 错误的用法 - 不能使用反射检测没有标记为runtime rentention的注解的存在
DMI_ARGUMENTS_WRONG_ORDER = 错误的用法 - 方法参数顺序翻转
DMI_BAD_MONTH = 错误的用法 - 对于month错误的常量值
DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE = 基本规则 - 由double构造BigDecimal时没有指定精确度
DMI_BLOCKING_METHODS_ON_URL = 性能问题 - URL的equals 和 hashCode 方法会被堵塞
DMI_CALLING_NEXT_FROM_HASNEXT = 错误的用法 - hasNext方法调用了next方法
DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES = 错误的用法 - 集合不应该包含自身
DMI_COLLECTION_OF_URLS = 性能问题 - URL的Maps 和 sets可能是性能大问题
DMI_CONSTANT_DB_PASSWORD = 安全问题 - 硬编码了数据库密码
DMI_DOH = 错误的用法 - 一个明显不合理的方法调用
DMI_EMPTY_DB_PASSWORD = 安全问题 - 空的数据库密码
DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS = 不良实践 - 一个入口的添加可能因为重用Entry对象导致失败
DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR = 错误的用法 - 尝试修改ScheduledThreadPoolExecutor的最大数
DMI_HARDCODED_ABSOLUTE_FILENAME = 危险的用法 - 类包含一个硬编码的绝对路径
DMI_INVOKING_HASHCODE_ON_ARRAY = 错误的用法 - 在数组上调用了hashCode
DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY = 错误的用法 - 对数组执行toString
DMI_INVOKING_TOSTRING_ON_ARRAY = 错误的用法 - 调用了数组的toString
DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT = 错误的用法 - 在int上调用了Double.longBitsToDouble
DMI_NONSERIALIZABLE_OBJECT_WRITTEN = 危险的用法 - 非持久化的对象写入了ObjectOutput
DMI_RANDOM_USED_ONLY_ONCE = 性能问题 - Random对象创建后只用了一次
DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS = 错误的用法 - 创建了没有任何线程的ScheduledThreadPoolExecutor
DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED = 危险的用法 - 希望传入Runnable的地方传入了一个Thread
DMI_UNSUPPORTED_METHOD = 危险的用法 - 调用不支持的方法
DMI_USELESS_SUBSTRING = 危险的用法 - 调用substring(0)会返回原值
DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION = 不良实践 - 不要使用removeAll清空集合
DMI_VACUOUS_SELF_COLLECTION_CALL = 错误的用法 - 集合的调用不能被感知
DM_BOOLEAN_CTOR = 性能问题 - 方法调用了低效的Boolean构造方法；使用Boolean.valueOf(...)代替
DM_BOXED_PRIMITIVE_TOSTRING = 性能问题 - 方法使用了装箱的基本类型只为了调用toString
DM_CONVERT_CASE = 国际化问题 - 考虑使用国际化参数型的调用方法版本
DM_DEFAULT_ENCODING = 国际化问题 - 信任默认字符编码
DM_EXIT = 不良实践 - 方法调用了System.exit(...)
DM_FP_NUMBER_CTOR = 性能问题 - 方法调用了低效的浮点书构造方法；应该使用静态的valueOf代替
DM_GC = 不良实践 - 直接调用垃圾回收，特别是在性能测试中的可疑代码
DM_MONITOR_WAIT_ON_CONDITION = 多线程问题 - 根据条件监控wait()的调用
DM_NEW_FOR_GETCLASS = 性能问题 - 仅为了获得一个方法就创建了一个对象
DM_NEXTINT_VIA_NEXTDOUBLE = 性能问题 - 使用Random的nextInt方法来获得一个随机整数，而不是nextDouble
DM_NUMBER_CTOR = 性能问题 - 方法调用低效的数字构造方法;使用静态valueOf代替
DM_RUN_FINALIZERS_ON_EXIT = 不良实践 - 方法调用了危险的runFinalizersOnExit方法
DM_STRING_CTOR = 性能问题 - 方法调用了效率很低的new String(String)构造方法
DM_STRING_TOSTRING = 性能问题 - 方法调用了String的toString()方法
DM_STRING_VOID_CTOR = 性能问题 - 方法调用了低效的new String()构造方法
DM_USELESS_THREAD = 多线程问题 - 使用默认的空run方法创建了一个线程
DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED = 恶意代码攻击 - Classloaders应该只在doPrivileged块中被创建
DP_DO_INSIDE_DO_PRIVILEGED = 安全问题 - 方法调用应该在doPrivileged块中
EC_ARRAY_AND_NONARRAY = 基本规则 - equals()用来比较数组和非数组
EC_BAD_ARRAY_COMPARE = 基本规则 - 调用equals()，与==效果一样
EC_INCOMPATIBLE_ARRAY_COMPARE = 错误的用法 - 使用equals()比较不兼容的数组
EC_NULL_ARG = 基本规则 - 使用空参数调用equals()
EC_UNRELATED_CLASS_AND_INTERFACE = 错误的用法 - equals()比较无关的类和接口
EC_UNRELATED_INTERFACES = 错误的用法 - 调用equals()比较不同的接口类型
EC_UNRELATED_TYPES = 基本规则 - 使用equals()比较不同类型
EC_UNRELATED_TYPES_USING_POINTER_EQUALITY = 错误的用法 - 使用指针比较不同的类型
EI_EXPOSE_REP = 恶意代码攻击 - 可能通过返回一个可变对象的引用暴露了内部实现
EI_EXPOSE_REP2 = 恶意代码攻击 - 可能暴露内部实现，通过与可变对象引用协作
EI_EXPOSE_STATIC_REP2 = 恶意代码攻击 - 把可变对象保存到静态字段中可能会暴露内部静态状态
EQ_ABSTRACT_SELF = 不良实践 - 抽象类定义了协变的equals方法
EQ_ALWAYS_FALSE = 错误的用法 - equals方法一直返回false
EQ_ALWAYS_TRUE = 错误的用法 - equals方法总是返回true
EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS = 不良实践 - equals检测不兼容的参数操作
EQ_COMPARETO_USE_OBJECT_EQUALS = 不良实践 - 类定义了compareTo(...)，但使用了Object.equals()
EQ_COMPARING_CLASS_NAMES = 错误的用法 - equals方法比较类名而不是比较类
EQ_DOESNT_OVERRIDE_EQUALS = 危险的用法 - 类没有覆盖父类的equals方法
EQ_DONT_DEFINE_EQUALS_FOR_ENUM = 错误的用法 - 枚举定义了协变equals()方法定义
EQ_GETCLASS_AND_CLASS_CONSTANT = 不良实践 - equals方法因为子类失败
EQ_OTHER_NO_OBJECT = 错误的用法 - equals()方法定义，但是没有覆盖equals(Object)
EQ_OTHER_USE_OBJECT = 错误的用法 - equals()方法定义没有覆盖Object.equals(Object)
EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC = 错误的用法 - equals方法覆盖了父类的equals可能功能不符
EQ_SELF_NO_OBJECT = 不良实践 - 协变equals()方法定义
EQ_SELF_USE_OBJECT = 错误的用法 - 协变equals()方法定义，继承了Object.equals(Object)
EQ_UNUSUAL = 危险的用法 - 罕见的equals方法
ES_COMPARING_PARAMETER_STRING_WITH_EQ = 基本规则 - 比较字符串参数使用了 == 或 !=
ES_COMPARING_STRINGS_WITH_EQ = 基本规则 - 使用== 或 !=比较String
ESync_EMPTY_SYNC = 多线程问题 - 空的同步块
FE_FLOATING_POINT_EQUALITY = 危险的用法 - 测试浮点数相等
FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER = 不良实践 - 测试是否与NaN相等
FI_EMPTY = 不良实践 - 应该删除空的finalizer
FI_EXPLICIT_INVOCATION = 不良实践 - 直接调用finalizer
FI_FINALIZER_NULLS_FIELDS = 不良实践 - Finalizer空属性
FI_FINALIZER_ONLY_NULLS_FIELDS = 不良实践 - Finalizer中子还有null属性
FI_MISSING_SUPER_CALL = 不良实践 - Finalizer没有调用父类的finalizer
FI_NULLIFY_SUPER = 不良实践 - 空Finalizer禁用了超类的finalizer
FI_PUBLIC_SHOULD_BE_PROTECTED = 恶意代码攻击 - Finalizer应该是protected，不能是public
FI_USELESS = 不良实践 - Finalizer除了调用父类的finalizer以外什么也没做
FL_MATH_USING_FLOAT_PRECISION = 危险的用法 - 方法进行数学运算时使用了浮点数的精度
GC_UNCHECKED_TYPE_IN_GENERIC_CALL = 不良实践 - 泛型调用中使用了未检查的类型
GC_UNRELATED_TYPES = 基本规则 - 泛型参数与方法参数没有相互关系
HE_EQUALS_NO_HASHCODE = 不良实践 - 类定义了equals()，但是没有hashCode()
HE_EQUALS_USE_HASHCODE = 不良实践 - 类定义了equals()，但使用了Object.hashCode()
HE_HASHCODE_NO_EQUALS = 不良实践 - 类定义了hashCode()但是没定义equals()
HE_HASHCODE_USE_OBJECT_EQUALS = 不良实践 - 定义了hashCode()的类使用了Object.equals()
HE_INHERITS_EQUALS_USE_HASHCODE = 不良实践 - 类继承了equals()，但使用了Object.hashCode()
HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS = 错误的用法 - 在哈希构造中声明了不能哈希的类
HE_USE_OF_UNHASHABLE_CLASS = 错误的用法 - 在哈希数据结构中使用的类没有定义hashCode()方法
HRS_REQUEST_PARAMETER_TO_COOKIE = 安全问题 - HTTP cookie可能来自不被信任的输入
HRS_REQUEST_PARAMETER_TO_HTTP_HEADER = 安全问题 - HTTP响应拆分漏洞
HSC_HUGE_SHARED_STRING_CONSTANT = 性能问题 - 巨大的字符串常量在多个类文件中间重复了
IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD = 危险的用法 - 被继承的或外部的方法的模棱两可的调用
ICAST_BAD_SHIFT_AMOUNT = 错误的用法 - 右移的数值不在0..31范围内
ICAST_IDIV_CAST_TO_DOUBLE = 危险的用法 - int相除的结果转换成double或float
ICAST_INTEGER_MULTIPLY_CAST_TO_LONG = 危险的用法 - 整形乘法的结果转换为long型
ICAST_INT_2_LONG_AS_INSTANT = 错误的用法 - int转换成long，用来当做绝对时间
ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL = 错误的用法 - int转换成double，然后传递给Math.ceil
ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND = 错误的用法 - int值转换成float，然后传递给Math.round
ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT = 危险的用法 - 无符号右移转换为short/byte
IC_INIT_CIRCULARITY = 危险的用法 - 初始化死循环
IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION = 不良实践 - 父类初始化时使用了子类
IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD = 错误的用法 - 在run方法中的JUnit检验不能报告给JUnit
IJU_BAD_SUITE_METHOD = 错误的用法 - TestCase声明了一个错误的suite方法
IJU_NO_TESTS = 错误的用法 - TestCase没有任何测试
IJU_SETUP_NO_SUPER = 错误的用法 - TestCase定义的setUp没有调用super.setUp()
IJU_SUITE_NOT_STATIC = 错误的用法 - TestCase实现了非static suite方法
IJU_TEARDOWN_NO_SUPER = 错误的用法 - TestCase定义的tearDown没有调用super.tearDown()
IL_CONTAINER_ADDED_TO_ITSELF = 错误的用法 - 一个集合被添加到自身
IL_INFINITE_LOOP = 安全问题 - 明显的无限循环
IL_INFINITE_RECURSIVE_LOOP = 安全问题 - 明显的无限递归循环
IMSE_DONT_CATCH_IMSE = 不良实践 - 捕获可疑IllegalMonitorStateException
IM_AVERAGE_COMPUTATION_COULD_OVERFLOW = 危险的用法 - 计算平均值可能溢出
IM_BAD_CHECK_FOR_ODD = 基本规则 - 对奇偶判断不能用于负数
IM_MULTIPLYING_RESULT_OF_IREM = 错误的用法 - 整数乘法的结果是整数
INT_BAD_COMPARISON_WITH_INT_VALUE = 错误的用法 - 错误比较int值和long常量
INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE = 错误的用法 - 错误比较非负值与负数
INT_BAD_COMPARISON_WITH_SIGNED_BYTE = 错误的用法 - 错误比较带符号的byte
INT_BAD_REM_BY_1 = 危险的用法 - 整数剩余模1
INT_VACUOUS_BIT_OPERATION = 危险的用法 - 在整形上进行位操作时有一些位上出现空洞
INT_VACUOUS_COMPARISON = 危险的用法 - 整形的空比较
IO_APPENDING_TO_OBJECT_OUTPUT_STREAM = 错误的用法 - 尝试向一个对象输出流添加信息
IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN = 错误的用法 - 参数没有被使用，但是被重新赋值了
IS2_INCONSISTENT_SYNC = 多线程问题 - 不一致的同步
ISC_INSTANTIATE_STATIC_CLASS = 不良实践 - 只提供静态方法的类不需要实例化
IS_FIELD_NOT_GUARDED = 多线程问题 - 属性不能保证同步访问
IS_INCONSISTENT_SYNC = 多线程问题 - 不一致的同步
ITA_INEFFICIENT_TO_ARRAY = 性能问题 - 方法使用了toArray()对空数组参数
IT_NO_SUCH_ELEMENT = 不良实践 - 迭代器的next()方法不能抛出NoSuchElementException
J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION = 不良实践 - 在HttpSession中保存了不可序列化的对象
JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS = 不良实践 - 不可变的类的属性应该是final
JLM_JSR166_LOCK_MONITORENTER = 多线程问题 - 在java.util.concurrent Lock上进行了同步
JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT = 多线程问题 - 在util.concurrent抽象中使用监控样式的wait方法
LI_LAZY_INIT_STATIC = 安全问题 - 错误的对static属性进行了延迟初始化
LI_LAZY_INIT_UPDATE_STATIC = 安全问题 - 错误的延迟初始化和更新静态属性
MF_CLASS_MASKS_FIELD = 不良实践 - 类定义了属性覆盖了父类的属性
MF_METHOD_MASKS_FIELD = 错误的用法 - 方法定义了一个变量，与实例变量同名。
ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD = 基本规则 - 使用同步的属性可能发生改变
ML_SYNC_ON_UPDATED_FIELD = 多线程问题 - 方法在一个修改了的属性上进行了同步
MSF_MUTABLE_SERVLET_FIELD = 多线程问题 - 可变的servlet属性
MS_CANNOT_BE_FINAL = 恶意代码攻击 - 字段不是final的，不能防止恶意代码的攻击
MS_EXPOSE_REP = 安全问题 - Public static方法可能因为返回了一个数组而暴露内部实现
MS_FINAL_PKGPROTECT = 安全问题 - 属性应该同时是final 和 package protected的
MS_MUTABLE_ARRAY = 安全问题 - 属性是可变数组
MS_MUTABLE_HASHTABLE = 恶意代码攻击 - 属性是可变的Hashtable
MS_OOI_PKGPROTECT = 安全问题 - 属性应该从接口中移除并将访问权限设置为包保护
MS_PKGPROTECT = 恶意代码攻击 - 属性应该是package protected
MS_SHOULD_BE_FINAL = 性能问题 - 属性不是final，但是应该设置成final
MTIA_SUSPECT_SERVLET_INSTANCE_FIELD = 危险的用法 - 扩展Servlet的类使用了实例变量
MTIA_SUSPECT_STRUTS_INSTANCE_FIELD = 危险的用法 - 继承了struts Action的类使用了实例变量
MWN_MISMATCHED_NOTIFY = 多线程问题 - 不匹配的notify()
MWN_MISMATCHED_WAIT = 多线程问题 - 不匹配的wait()
NM_BAD_EQUAL = 错误的用法 - 类定义了equal(Object)，应该是equals(Object)吧？
NM_CLASS_NAMING_CONVENTION = 不良实践 - 类名应该以大写字母开头
NM_CLASS_NOT_EXCEPTION = 不良实践 - Class没有继承Exception，虽然名字像一个异常
NM_CONFUSING = 不良实践 - 迷惑的方法名
NM_FIELD_NAMING_CONVENTION = 不良实践 - 属性名应该以小写字母开头
NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER = 不良实践 - 使用的标记是未来java版本中的关键字
NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER = 不良实践 - 使用了未来java版本中成为关键字的标识
NM_LCASE_HASHCODE = 错误的用法 - 类定义了hashcode(); 应该是hashCode()吧？
NM_LCASE_TOSTRING = 错误的用法 - 类定义了tostring(); 应该是toString()吧？
NM_METHOD_CONSTRUCTOR_CONFUSION = 错误的用法 - 明显的方法/构造方法混淆
NM_METHOD_NAMING_CONVENTION = 不良实践 - 方法名应该以小写字母开头
NM_SAME_SIMPLE_NAME_AS_INTERFACE = 不良实践 - 类名不应该和实现的接口名相同
NM_SAME_SIMPLE_NAME_AS_SUPERCLASS = 不良实践 - 类名不应该和父类的名称相同
NM_VERY_CONFUSING = 错误的用法 - 非常容易迷惑的方法名
NM_VERY_CONFUSING_INTENTIONAL = 不良实践 - 非常迷惑的方法名称（可能是内部方法）
NM_WRONG_PACKAGE = 错误的用法 - 方法没有覆盖父类的方法，因为参数的包不正确
NM_WRONG_PACKAGE_INTENTIONAL = 不良实践 - 方法没有覆盖父类的方法因为参数包名错误
NN_NAKED_NOTIFY = 多线程问题 - 未使用同步包裹的notify
NO_NOTIFY_NOT_NOTIFYALL = 多线程问题 - 使用notify()而不是notifyAll()
NP_ALWAYS_NULL = 基本规则 - 调用了null指针
NP_ALWAYS_NULL_EXCEPTION = 基本规则 - 方法的异常路径中引用了空指针
NP_ARGUMENT_MIGHT_BE_NULL = 错误的用法 - 方法没有检查空参数
NP_BOOLEAN_RETURN_NULL = 不良实践 - 方法返回boolean类型返回了null
NP_CLONE_COULD_RETURN_NULL = 不良实践 - Clone方法可能返回null
NP_CLOSING_NULL = 错误的用法 - close()调用了一个永远是null的值
NP_DEREFERENCE_OF_READLINE_VALUE = 危险的用法 - 没有判断readLine()的结果是否为空
NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT = 基本规则 - equals()方法没有检测null参数
NP_GUARANTEED_DEREF = 基本规则 - null值一定会被调用
NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH = 基本规则 - null值会在exception处理中被用到
NP_IMMEDIATE_DEREFERENCE_OF_READLINE = 危险的用法 - 立刻使用了readLine()的结果
NP_LOAD_OF_KNOWN_NULL_VALUE = 危险的用法 - 加载了已知的null值
NP_NONNULL_PARAM_VIOLATION = 错误的用法 - 方法传递null给一个非空参数
NP_NONNULL_RETURN_VIOLATION = 错误的用法 - 方法可能返回null，但是声明了 @NonNull
NP_NULL_INSTANCEOF = 基本规则 - 一个已知的null值被检测它是否是一个类型的实例
NP_NULL_ON_SOME_PATH = 基本规则 - 可能出现空指针引用
NP_NULL_ON_SOME_PATH_EXCEPTION = 基本规则 - 方法的异常路径中可能引用空指针
NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE = 危险的用法 - 调用返回返回值可能出现null值
NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE = 危险的用法 - 这个路径上空指针引用是不可实现的
NP_NULL_PARAM_DEREF = 错误的用法 - 方法调用把null传递给一个非null参数
NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS = 错误的用法 - 方法调用传递null给非空参数 (ALL_TARGETS_DANGEROUS)
NP_NULL_PARAM_DEREF_NONVIRTUAL = 错误的用法 - 非虚拟方法调用向非空参数传入了null
NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE = 危险的用法 - 参数必须非null但是标记为可为null
NP_STORE_INTO_NONNULL_FIELD = 错误的用法 - 属性已经标记为NonNull，但是设置了一个null值
NP_SYNC_AND_NULL_CHECK_FIELD = 多线程问题 - 同步和空值检测发生在同一个属性上
NP_TOSTRING_COULD_RETURN_NULL = 不良实践 - toString方法可能返回null
NP_UNWRITTEN_FIELD = 错误的用法 - 读取未初始化的属性
NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD = 危险的用法 - 读取了未初始化的public或protected属性
NS_DANGEROUS_NON_SHORT_CIRCUIT = 危险的用法 - 潜在危险使用非短跳出逻辑
NS_NON_SHORT_CIRCUIT = 不良实践 - 可疑的非短路逻辑
OBL_UNSATISFIED_OBLIGATION = 基本规则 - 方法可能在清理流或资源时失败
OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE = 危险的用法 - 方法可能因为checked exception导致清理流或资源失败
ODR_OPEN_DATABASE_RESOURCE = 基本规则 - 方法可能在关闭database资源时失败
ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH = 基本规则 - 方法可能在关闭database资源时因为异常失败
OS_OPEN_STREAM = 基本规则 - 方法可能在关闭流时失败
OS_OPEN_STREAM_EXCEPTION_PATH = 基本规则 - 方法可能在关闭流时因为异常而失败
PS_PUBLIC_SEMAPHORES = 多线程问题 - 类在公用接口中暴露了同步和信号
PZLA_PREFER_ZERO_LENGTH_ARRAYS = 危险的用法 - 考虑返回空数组而不是null
PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS = 不良实践 - 不用在iterator里重用entry对象
QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT = 错误的用法 - 方法在布尔表达式中分配了boolean文字
QF_QUESTIONABLE_FOR_LOOP = 危险的用法 - for循环中存在复杂，微妙或者错误的自增
RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE = 危险的用法 - 重复比较非空值和null
RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES = 危险的用法 - 重复比较两个null值
RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE = 危险的用法 - 对一个已知不是null的值重复进行空值判断
RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE = 危险的用法 - 已知的null值被重复的检测
RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE = 错误的用法 - 对一个已经使用的值进行了null检测
RC_REF_COMPARISON = 基本规则 - 怀疑进行了引用比较
RC_REF_COMPARISON_BAD_PRACTICE = 不良实践 - 可疑的引用与常量的比较
RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN = 不良实践 - 怀疑对两个布尔值的引用进行比较
REC_CATCH_EXCEPTION = 危险的用法 - 捕获了没有抛出的异常
RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION = 错误的用法 - 非法的正则表达式
RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION = 错误的用法 - File.separator用做正则表达式
RE_POSSIBLE_UNINTENDED_PATTERN = 错误的用法 - "."用作正则表达式
RI_REDUNDANT_INTERFACES = 不良实践 - 类实现了父类一样的接口
RR_NOT_CHECKED = 不良实践 - 方法忽略InputStream.read()的返回值
RS_READOBJECT_SYNC = 多线程问题 - 类的readObject()方法不是同步的
RU_INVOKE_RUN = 多线程问题 - 在线程中调用了run（你的意思是再启动一次么？）
RV_01_TO_INT = 错误的用法 - 0至1的随机数被当做整数0
RV_ABSOLUTE_VALUE_OF_HASHCODE = 错误的用法 - 错误的尝试计算带符号的32位hashcodde的绝对值
RV_ABSOLUTE_VALUE_OF_RANDOM_INT = 错误的用法 - 尝试计算32位随机整数的绝对值
RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE = 错误的用法 - compareTo返回的值与指定的值进行检测
RV_CHECK_FOR_POSITIVE_INDEXOF = 危险的用法 - 方法检查检查String.indexOf的结果是否为正数
RV_DONT_JUST_NULL_CHECK_READLINE = 危险的用法 - 方法丢掉了readLine的结果，在检测它是非空之后。
RV_EXCEPTION_NOT_THROWN = 性能问题 - 异常创建后就丢弃了，没有抛出
RV_NEGATING_RESULT_OF_COMPARETO = 不良实践 - 调换了compareTo()/compare()结果的正负
RV_REM_OF_HASHCODE = 危险的用法 - hashCode的结果可能是负数negative
RV_REM_OF_RANDOM_INT = 危险的用法 - 其余32位带符号随机整数
RV_RETURN_VALUE_IGNORED = 错误的用法 - 方法忽略了返回值
RV_RETURN_VALUE_IGNORED2 = 错误的用法 - 方法忽略了返回值
RV_RETURN_VALUE_IGNORED_BAD_PRACTICE = 不良实践 - 方法忽略异常返回值
RV_RETURN_VALUE_IGNORED_INFERRED = 危险的用法 - 方法忽略了返回值，这是正常的吗？
RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED = 多线程问题 - 忽略了putIfAbsent的返回值，传递给putIfAbsent的值被重用
RpC_REPEATED_CONDITIONAL_TEST = 错误的用法 - 重复判断条件
SA_FIELD_DOUBLE_ASSIGNMENT = 危险的用法 - 对属性进行双重赋值
SA_FIELD_SELF_ASSIGNMENT = 错误的用法 - 属性自身赋值
SA_FIELD_SELF_COMPARISON = 错误的用法 - 属性自己与自己进行了比较
SA_FIELD_SELF_COMPUTATION = 错误的用法 - 无意义的自我计算 (比如 x & x)
SA_LOCAL_DOUBLE_ASSIGNMENT = 危险的用法 - 给局部变量双重赋值
SA_LOCAL_SELF_ASSIGNMENT = 危险的用法 - 局部变量的自我赋值
SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD = 错误的用法 - 局部变量给自己赋值而不是赋值到实例变量中
SA_LOCAL_SELF_COMPARISON = 错误的用法 - 自己和自己的值比较
SA_LOCAL_SELF_COMPUTATION = 错误的用法 - 对一个变量进行无意义的自我计算 (比如 x & x)
SBSC_USE_STRINGBUFFER_CONCATENATION = 性能问题 - 方法在循环中使用+进行字符串拼接
SC_START_IN_CTOR = 多线程问题 - 构造方法调用了Thread.start()
SE_BAD_FIELD = 不良实践 - 在序列化类中出现了非transient也非serializable的实例属性
SE_BAD_FIELD_INNER_CLASS = 不良实践 - 非serializable类有一个可序列化的内部类
SE_BAD_FIELD_STORE = 不良实践 - 非序列化值保存在序列化类的实例变量中
SE_COMPARATOR_SHOULD_BE_SERIALIZABLE = 不良实践 - Comparator没有实现Serializable
SE_INNER_CLASS = 不良实践 - 可序列化的内部类
SE_METHOD_MUST_BE_PRIVATE = 错误的用法 - 方法必须是private的为了让序列化正常工作
SE_NONFINAL_SERIALVERSIONID = 不良实践 - serialVersionUID不是final的
SE_NONLONG_SERIALVERSIONID = 不良实践 - serialVersionUID不是long型
SE_NONSTATIC_SERIALVERSIONID = 不良实践 - serialVersionUID不是static的
SE_NO_SERIALVERSIONID = 不良实践 - 类是可序列化的，但是没有定义serialVersionUID
SE_NO_SUITABLE_CONSTRUCTOR = 基本规则 - 类是可序列化的，但是父类没有定义无参数构造方法
SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION = 不良实践 - 类是可扩展的，但是没有提供无参数的构造方法
SE_PRIVATE_READ_RESOLVE_NOT_INHERITED = 危险的用法 - 私有readResolve方法不是继承自父类
SE_READ_RESOLVE_IS_STATIC = 错误的用法 - readResolve方法没有生命为static方法
SE_READ_RESOLVE_MUST_RETURN_OBJECT = 不良实践 - readResolve方法必须返回Object
SE_TRANSIENT_FIELD_NOT_RESTORED = 不良实践 - Transient属性没有再反序列化时被设置
SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS = 危险的用法 - 类的transient属性不能序列化
SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH = 错误的用法 - 由于switch语句导致的无用存储
SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW = 错误的用法 - switch语句失败抛出异常导致无用的存储
SF_SWITCH_FALLTHROUGH = 危险的用法 - Switch语句中一个case失败以后进入了下一个case
SF_SWITCH_NO_DEFAULT = 不良实践 - Switch语句中没有包含default
SIC_INNER_SHOULD_BE_STATIC = 性能问题 - 应该是一个静态内部类
SIC_INNER_SHOULD_BE_STATIC_ANON = 性能问题 - 可以重构成一个静态内部类
SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS = 性能问题 - 可以筹够成一个静态内部类
SIC_THREADLOCAL_DEADLY_EMBRACE = 错误的用法 - 非静态内部类和ThreadLocal的致命结合
SIO_SUPERFLUOUS_INSTANCEOF = 错误的用法 - 不必要的类型检测使用instanceof操作符
SI_INSTANCE_BEFORE_FINALS_ASSIGNED = 不良实践 - 在所有静态final属性赋值之前static初始化块创建了一个实例
SP_SPIN_ON_FIELD = 多线程问题 - 方法对一个属性循环复制
SQL_BAD_PREPARED_STATEMENT_ACCESS = 错误的用法 - 方法尝试访问PreparedStatement参数的索引是0
SQL_BAD_RESULTSET_ACCESS = 错误的用法 - 方法尝试访问一个ResultSet，但是使用的index是0
SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE = 安全问题 - 非常量的字符串传递给方法执行SQL语句
SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING = 安全问题 - 使用非常量字符串创建了一个PreparedStatement
SR_NOT_CHECKED = 不良实践 - 方法忽略了InputStream.skip()的结果
SS_SHOULD_BE_STATIC = 性能问题 - 未读取的属性：这个属性是否应该是static的？
STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE = 多线程问题 - 调用静态Calendar
STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE = 基本规则 - 调用静态DateFormat
STCAL_STATIC_CALENDAR_INSTANCE = 多线程问题 - 静态Calendar
STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE = 基本规则 - 静态DateFormat
STI_INTERRUPTED_ON_CURRENTTHREAD = 错误的用法 - currentThread()调用的不必要用法，调用了interrupted()
STI_INTERRUPTED_ON_UNKNOWNTHREAD = 错误的用法 - 在thread实例上调用了静态Thread.interrupted()方法
ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD = 安全问题 - 通过一个实例方法更新静态属性
SWL_SLEEP_WITH_LOCK_HELD = 多线程问题 - 方法在获得锁时调用了Thread.sleep()
SW_SWING_METHODS_INVOKED_IN_SWING_THREAD = 不良实践 - 某些swing方法需要在swing线程中调用
TLW_TWO_LOCK_WAIT = 多线程问题 - 等待两个被持有的锁
TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED = 错误的用法 - 某个值使用了注解限制类型，但是这个限制永远不会发生
TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK = 危险的用法 - 数值需要类型标示，但是却标记为未知
TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK = 危险的用法 - 值不要求有类型标示，但是标记为未知
TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK = 错误的用法 - 值可能没有携带一个类修饰符，但是使用中会一直需要这个类修饰符
TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK = 错误的用法 - 值可能带着一个类型修饰符，一直使用的方式是与这个类型修饰符相悖的
TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED = 错误的用法 - 某个值使用了注解标记不会限制类型，但是这个限制是必须的
UCF_USELESS_CONTROL_FLOW = 危险的用法 - 无用控制流
UCF_USELESS_CONTROL_FLOW_NEXT_LINE = 危险的用法 - 执行到下一行的无用流程控制
UG_SYNC_SET_UNSYNC_GET = 多线程问题 - 未同步的getter方法，同步的setter方法
UI_INHERITANCE_UNSAFE_GETRESOURCE = 不良实践 - 如果类被扩展，GetResource的使用可能就是不安全的
UL_UNRELEASED_LOCK = 多线程问题 - 方法没有在任何路径中释放锁
UL_UNRELEASED_LOCK_EXCEPTION_PATH = 多线程问题 - 方法没有在所有异常路径释放锁
UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS = 错误的用法 - 匿名内部类中定义的不可调用的方法
UM_UNNECESSARY_MATH = 性能问题 - 方法常量调用了静态Math类方法
UOE_USE_OBJECT_EQUALS = 不良实践 - 在final类上调用了equals，但是没有覆盖Object的equals方法
UPM_UNCALLED_PRIVATE_METHOD = 性能问题 - 从未用到的私有方法
URF_UNREAD_FIELD = 性能问题 - 读不到的属性
URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD = 危险的用法 - 未被读取的public/protected属性
UR_UNINIT_READ = 错误的用法 - 构造方法中对未初始化的类进行了读取
UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR = 基本规则 - 父类的构造方法调用未初始化属性的方法
UUF_UNUSED_FIELD = 性能问题 - 无用的属性
UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD = 危险的用法 - 未被使用的public 或 protected 属性
UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR = 危险的用法 - 构造方法没有初始化属性
UWF_NULL_FIELD = 错误的用法 - 属性曾经设置为null
UWF_UNWRITTEN_FIELD = 错误的用法 - 未赋值属性
UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD = 危险的用法 - 未初始化的public 或 protected 属性
UW_UNCOND_WAIT = 安全问题 - 无条件等待
VA_FORMAT_STRING_ARG_MISMATCH = 错误的用法 - 格式化字符串参数的数目与占位符不相等
VA_FORMAT_STRING_BAD_ARGUMENT = 错误的用法 - 格式化字符串占位符与传入的参数不匹配
VA_FORMAT_STRING_BAD_CONVERSION = 错误的用法 - 提供的参数类型与格式化标记不符
VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY = 错误的用法 - 使用格式化字符串对数组进行了无用的格式化
VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN = 危险的用法 - 非布尔参数使用%b进行了格式化
VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED = 错误的用法 - 需要使用printf样式时使用了MessageFormat
VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED = 错误的用法 - 传递了多余实际使用的格式化字符串的参数
VA_FORMAT_STRING_ILLEGAL = 错误的用法 - 非法的格式化字符串
VA_FORMAT_STRING_MISSING_ARGUMENT = 错误的用法 - 格式化字符串引用的参数丢失
VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT = 错误的用法 - 格式化字符串没有前面的参数
VA_FORMAT_STRING_USES_NEWLINE = 不良实践 - 格式化代码应该使用%n代替
VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG = 错误的用法 - 基本类型数组传递给一个期待可变对象类型参数的方法
VO_VOLATILE_INCREMENT = 多线程问题 - volatile的自增操作不是原子的
VO_VOLATILE_REFERENCE_TO_ARRAY = 多线程问题 - 数组的volatile引用不会把数组元素也当做volatile来引用
WA_AWAIT_NOT_IN_LOOP = 多线程问题 - 未在循环中使用的Condition.await()
WA_NOT_IN_LOOP = 多线程问题 - Wait不在循环中
WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL = 多线程问题 - 在getClass上使用同步而不是在class文字上
WMI_WRONG_MAP_ITERATOR = 性能问题 - keySet迭代是低效的，使用entrySet代替
WS_WRITEOBJECT_SYNC = 多线程问题 - 类的writeObject()方法是同步的，但是没有做其他事情
XFB_XML_FACTORY_BYPASS = 危险的用法 - 方法直接调用了xml接口的一个具体实现
XSS_REQUEST_PARAMETER_TO_JSP_WRITER = 安全问题 - JSP反射调用跨域脚本漏洞
XSS_REQUEST_PARAMETER_TO_SEND_ERROR = 安全问题 - servlet的反射导致跨站脚本漏洞
XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER = 安全问题 - Servlet反射跨域脚本漏洞

LP_CHECK_CONCURRENT_MODIFICATION = 基本规则 - List.subList后对原集合做了结构性更改
LP_CHECK_COLLECTION_NPE = 基本规则 - 调用List变量的方法之前必须判断null
LP_CHECK_FINALLY = 基本规则 - finally语句块中禁止return!
Lp_F2D_CHECK = 基本规则 - float与double禁止比较！
LP_LOOP_RECURSIVE_CHECK = 基本规则 - 遍历集合类删除元素后递归操作Bug隐患

BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY = 基本规则 - 类型转换异常隐患！
BC_NULL_INSTANCEOF = 基本规则 - 永远返回固定值的instanceof！

LP_CHECK_EXCEPTION = 自定义规则 - 线上代码禁止调用e.printStackTrace!
LP_CHECK_LOGGER = 自定义规则 - Log使用不规范！
LP_CHECK_ILLEGAL_OPERATION = 自定义规则 - Array.asList得到的集合不允许增加和删除元素!
LP_CHECK_LOGGER_1 = 自定义规则 - 日志级别判断未匹配!
LP_CHECK_SYSTEM_METHOD = 自定义规则 - 线上代码禁止调用SYSTEM的某些方法！
RPC_REPEATED_CONDITIONAL_TEST = 性能问题 - 重复的判断条件
LP_CHECK_REG_PRE_COMPILE = 性能问题 - 正则表达式要进行预编译！
LP_CHECK_THREAD_SAFE_OBJ = 安全问题 - 线程不安全对象谨慎使用!
LP_CHECK_FINAL_STATIC_FIELD = 安全问题 - 多线程下的安全隐患！
LP_CHECK_PUBLIC_COLLECTION_STATIC = 安全问题 - 集合类存在内容被篡改隐患!
LP_CHECK_SET_POOL_SIZE = 安全问题 - 线程池使用时必须指定大小!
LP_MAGIC_NUMBER_FIELD_NAME = 不良实践 - 成员变量禁止魔术定义！
LP_CHECK_SERIA = 不良实践 - 缺少序列化id!
LP_CHECK_PACKGENAME = 不良实践 - 类所属包命名不规范！
LP_ARGS_UN_USE_CHECK = 自定义规则 - 私有方法存在未使用参数!

